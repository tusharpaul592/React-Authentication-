{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Downloads\\\\Auth-Project 2\\\\01-starting-project\\\\src\\\\components\\\\Auth\\\\AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from 'react';\nimport classes from './AuthForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = () => {\n  _s();\n\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n    setIsLoading(true);\n    let url;\n\n    if (isLogin) {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyABbjkeWD-vUx1J1jeB8Yx4xkLzpn50TNo';\n    } else {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyABbjkeWD-vUx1J1jeB8Yx4xkLzpn50TNo';\n    }\n\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: false\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      if (res.ok) {\n        setIsLoading(false);\n      } else {\n        return res.json.then(data => {\n          const errorMessage = 'Authentication Failed';\n          alert(errorMessage);\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? 'Login' : 'Sign Up'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          required: true,\n          ref: emailInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          required: true,\n          ref: passwordInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [!isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? 'Login' : 'Create Account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading............\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? 'Create new account' : 'Login with existing account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthForm, \"62+DaFItGtvC0lYtzjtoDaSR47Y=\");\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["useState","useRef","classes","AuthForm","isLogin","setIsLogin","isLoading","setIsLoading","emailInputRef","passwordInputRef","switchAuthModeHandler","prevState","submitHandler","event","preventDefault","enteredEmail","current","value","enteredPassword","url","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","then","res","ok","json","data","errorMessage","alert","auth","control","actions","toggle"],"sources":["C:/Users/LENOVO/Downloads/Auth-Project 2/01-starting-project/src/components/Auth/AuthForm.js"],"sourcesContent":["import { useState, useRef } from 'react';\n\nimport classes from './AuthForm.module.css';\n \n\nconst AuthForm = () => {\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const emailInputRef=useRef();\n  const passwordInputRef=useRef();\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n  const submitHandler=(event)=>{\n    event.preventDefault();\n    const enteredEmail=emailInputRef.current.value;\n    const enteredPassword=passwordInputRef.current.value;\n    setIsLoading(true);\n    let url;\n    if(isLogin)\n    {\n      url='https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyABbjkeWD-vUx1J1jeB8Yx4xkLzpn50TNo';\n\n    }\n    else{\n      url='https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyABbjkeWD-vUx1J1jeB8Yx4xkLzpn50TNo';\n    }\n    fetch(url,{\n      method:'POST',\n      body:JSON.stringify({\n        email:enteredEmail,\n        password:enteredPassword,\n        returnSecureToken:false\n      }),\n      headers:{\n      'Content-Type':'application/json'\n      }\n\n      \n    }).then((res)=>{\n      if(res.ok)\n      {\n        setIsLoading(false)\n\n      }else{\n        return res.json.then((data)=>{\n          const errorMessage='Authentication Failed';\n          alert(errorMessage);\n        })\n      }\n\n    })\n    \n\n  }\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor='email'>Your Email</label>\n          <input type='email' id='email' required ref={emailInputRef}/>\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='password'>Your Password</label>\n          <input type='password' id='password' required ref={passwordInputRef}/>\n        </div>\n        <div className={classes.actions}>\n     {!isLoading && <button>{isLogin ? 'Login' : 'Create Account'}</button>}\n     {isLoading && <p>Loading............</p>}\n          <button\n            type='button'\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? 'Create new account' : 'Login with existing account'}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}